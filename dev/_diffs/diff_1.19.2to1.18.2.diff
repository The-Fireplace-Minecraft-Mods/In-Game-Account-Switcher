diff --recursive --unified --new-file 1.19.2/fabric/build.gradle.kts 1.18.2/fabric/build.gradle.kts
--- 1.19.2/fabric/build.gradle.kts	2025-05-27 12:20:42.403686000 +0300
+++ 1.18.2/fabric/build.gradle.kts	2025-06-03 11:02:14.437492800 +0300
@@ -25,10 +25,10 @@
 java.targetCompatibility = JavaVersion.VERSION_17
 java.toolchain.languageVersion = JavaLanguageVersion.of(17)
 group = "ru.vidtu.ias"
-base.archivesName = "IAS-Fabric-1.19.2"
+base.archivesName = "IAS-Fabric-1.18.2"
 description = "This mod allows you to change your logged in account in-game, without restarting Minecraft."
-evaluationDependsOn(":1.19.2-root")
-val shared = project(":1.19.2-root")
+evaluationDependsOn(":1.18.2-root")
+val shared = project(":1.18.2-root")
 
 repositories {
     mavenCentral()
@@ -59,13 +59,13 @@
     compileOnlyApi(libs.error.prone.annotations)
 
     // Minecraft (Provided)
-    minecraft(libs.minecraft.mc1192)
+    minecraft(libs.minecraft.mc1182)
     mappings(loom.officialMojangMappings())
 
     // Fabric (Provided)
     modImplementation(libs.fabric.loader)
-    modImplementation(libs.fabric.mc1192)
-    modImplementation(libs.modmenu.mc1192)
+    modImplementation(libs.fabric.mc1182)
+    modImplementation(libs.modmenu.mc1182)
 
     // Root
     compileOnly(shared)
@@ -102,7 +102,7 @@
             "Specification-Title" to "In-Game Account Switcher",
             "Specification-Version" to version,
             "Specification-Vendor" to "VidTu",
-            "Implementation-Title" to "IAS-Fabric-1.19.2",
+            "Implementation-Title" to "IAS-Fabric-1.18.2",
             "Implementation-Version" to version,
             "Implementation-Vendor" to "VidTu"
         )
diff --recursive --unified --new-file 1.19.2/fabric/gradle.properties 1.18.2/fabric/gradle.properties
--- 1.19.2/fabric/gradle.properties	2025-05-27 12:20:42.404698400 +0300
+++ 1.18.2/fabric/gradle.properties	2025-05-27 12:20:42.385688200 +0300
@@ -16,6 +16,6 @@
 # along with this program.  If not, see <https://www.gnu.org/licenses/>
 
 # Mod
-display.type=Fabric/Quilt 1.19.2
-modrinth.versions=1.19.2
+display.type=Fabric/Quilt 1.18.2
+modrinth.versions=1.18.2
 modrinth.loaders=fabric,quilt
diff --recursive --unified --new-file 1.19.2/fabric/src/main/resources/fabric.mod.json 1.18.2/fabric/src/main/resources/fabric.mod.json
--- 1.19.2/fabric/src/main/resources/fabric.mod.json	2025-05-27 12:20:42.406708300 +0300
+++ 1.18.2/fabric/src/main/resources/fabric.mod.json	2025-05-27 12:20:42.387730600 +0300
@@ -34,7 +34,7 @@
     "ias.mixins.json"
   ],
   "depends": {
-    "minecraft": "1.19.2",
+    "minecraft": "1.18.2",
     "fabric-api": "*"
   },
   "recommends": {
diff --recursive --unified --new-file 1.19.2/fabric/src/main/resources/quilt.mod.json 1.18.2/fabric/src/main/resources/quilt.mod.json
--- 1.19.2/fabric/src/main/resources/quilt.mod.json	2025-05-27 12:20:42.406708300 +0300
+++ 1.18.2/fabric/src/main/resources/quilt.mod.json	2025-05-27 12:20:42.388743800 +0300
@@ -27,8 +27,8 @@
     "depends": [
       {
         "id": "minecraft",
-        "versions": "1.19.2",
-        "reason": "In-Game Account Switcher works only with Minecraft 1.19.2."
+        "versions": "1.18.2",
+        "reason": "In-Game Account Switcher works only with Minecraft 1.18.2."
       },
       {
         "id": "fabric-api",
diff --recursive --unified --new-file 1.19.2/forge/build.gradle.kts 1.18.2/forge/build.gradle.kts
--- 1.19.2/forge/build.gradle.kts	2025-05-27 12:20:42.406708300 +0300
+++ 1.18.2/forge/build.gradle.kts	2025-05-27 12:20:42.388743800 +0300
@@ -25,10 +25,10 @@
 java.targetCompatibility = JavaVersion.VERSION_17
 java.toolchain.languageVersion = JavaLanguageVersion.of(17)
 group = "ru.vidtu.ias"
-base.archivesName = "IAS-Forge-1.19.2"
+base.archivesName = "IAS-Forge-1.18.2"
 description = "This mod allows you to change your logged in account in-game, without restarting Minecraft."
-evaluationDependsOn(":1.19.2-root")
-val shared = project(":1.19.2-root")
+evaluationDependsOn(":1.18.2-root")
+val shared = project(":1.18.2-root")
 
 loom {
     silentMojangMappingsLicense()
@@ -63,11 +63,11 @@
     compileOnlyApi(libs.error.prone.annotations)
 
     // Minecraft (Provided)
-    minecraft(libs.minecraft.mc1192)
+    minecraft(libs.minecraft.mc1182)
     mappings(loom.officialMojangMappings())
 
     // Forge
-    forge(libs.forge.mc1192)
+    forge(libs.forge.mc1182)
 
     // Root
     compileOnly(shared)
@@ -104,7 +104,7 @@
             "Specification-Title" to "In-Game Account Switcher",
             "Specification-Version" to version,
             "Specification-Vendor" to "VidTu",
-            "Implementation-Title" to "IAS-Forge-1.19.2",
+            "Implementation-Title" to "IAS-Forge-1.18.2",
             "Implementation-Version" to version,
             "Implementation-Vendor" to "VidTu",
             "MixinConfigs" to "ias.mixins.json"
diff --recursive --unified --new-file 1.19.2/forge/gradle.properties 1.18.2/forge/gradle.properties
--- 1.19.2/forge/gradle.properties	2025-05-27 12:20:42.406708300 +0300
+++ 1.18.2/forge/gradle.properties	2025-05-27 12:20:42.388743800 +0300
@@ -19,6 +19,6 @@
 loom.platform=forge
 
 # Mod
-display.type=Forge 1.19.2
-modrinth.versions=1.19.2
+display.type=Forge 1.18.2
+modrinth.versions=1.18.2
 modrinth.loaders=forge
diff --recursive --unified --new-file 1.19.2/forge/src/main/java/ru/vidtu/ias/IASForge.java 1.18.2/forge/src/main/java/ru/vidtu/ias/IASForge.java
--- 1.19.2/forge/src/main/java/ru/vidtu/ias/IASForge.java	2025-05-27 12:20:42.408916700 +0300
+++ 1.18.2/forge/src/main/java/ru/vidtu/ias/IASForge.java	2025-05-27 12:20:42.390134100 +0300
@@ -21,21 +21,19 @@
 
 import net.minecraft.client.gui.screens.Screen;
 import net.minecraftforge.api.distmarker.Dist;
-import net.minecraftforge.client.ConfigScreenHandler;
+import net.minecraftforge.client.ConfigGuiHandler;
 import net.minecraftforge.client.event.ScreenEvent;
 import net.minecraftforge.common.MinecraftForge;
-import net.minecraftforge.event.GameShuttingDownEvent;
 import net.minecraftforge.eventbus.api.SubscribeEvent;
 import net.minecraftforge.fml.IExtensionPoint;
 import net.minecraftforge.fml.ModContainer;
 import net.minecraftforge.fml.ModList;
+import net.minecraftforge.fml.ModLoadingContext;
 import net.minecraftforge.fml.common.Mod;
-import net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext;
 import net.minecraftforge.fml.loading.FMLEnvironment;
 import net.minecraftforge.fml.loading.FMLPaths;
 import net.minecraftforge.forgespi.language.IModInfo;
 import org.apache.maven.artifact.versioning.ArtifactVersion;
-import org.jetbrains.annotations.NotNull;
 import ru.vidtu.ias.screen.ConfigScreen;
 
 /**
@@ -47,11 +45,9 @@
 public final class IASForge {
     /**
      * Creates a new mod.
-     *
-     * @param context Mod loading context
      */
     @SuppressWarnings("ThisEscapedInObjectConstruction") // <- Minecraft Forge API.
-    public IASForge(@NotNull FMLJavaModLoadingContext context) {
+    public IASForge() {
         // Not sure how long the Forge does have the "clientSideOnly" field in the TOML,
         // so I'll do an additional exception check here.
         if (FMLEnvironment.dist != Dist.CLIENT) {
@@ -62,8 +58,8 @@
         MinecraftForge.EVENT_BUS.register(this);
 
         // Register various display tests and config hooks.
-        context.registerDisplayTest(IExtensionPoint.DisplayTest.IGNORE_ALL_VERSION);
-        context.registerExtensionPoint(ConfigScreenHandler.ConfigScreenFactory.class, () -> new ConfigScreenHandler.ConfigScreenFactory((minecraft, screen) -> new ConfigScreen(screen)));
+        ModLoadingContext.get().registerDisplayTest(IExtensionPoint.DisplayTest.IGNORE_ALL_VERSION);
+        ModLoadingContext.get().registerExtensionPoint(ConfigGuiHandler.ConfigGuiFactory.class, () -> new ConfigGuiHandler.ConfigGuiFactory((minecraft, screen) -> new ConfigScreen(screen)));
 
         // Create the UA and initialize.
         String modVersion = ModList.get().getModContainerById("ias")
@@ -76,19 +72,13 @@
                 .map(IModInfo::getVersion)
                 .map(ArtifactVersion::toString)
                 .orElse("UNKNOWN");
+        IASMinecraft.hackyMixinClosing = true;
         IASMinecraft.init(FMLPaths.GAMEDIR.get(), FMLPaths.CONFIGDIR.get(), "Forge", modVersion, loaderVersion);
     }
 
-    // Register closer.
-    @SubscribeEvent
-    public void onShutDown(GameShuttingDownEvent event) {
-        // Close.
-        IAS.close();
-    }
-
     // Register screen handlers.
     @SubscribeEvent
-    public void onScreenInit(ScreenEvent.Init.Post event) {
+    public void onScreenInit(ScreenEvent.InitScreenEvent.Post event) {
         // Init.
         Screen screen = event.getScreen();
         IASMinecraft.onInit(screen.getMinecraft(), screen, event::addListener);
@@ -96,7 +86,7 @@
 
     // Register drawer.
     @SubscribeEvent
-    public void onScreenDraw(ScreenEvent.Render.Post event) {
+    public void onScreenDraw(ScreenEvent.DrawScreenEvent.Post event) {
         // Draw.
         Screen screen = event.getScreen();
         IASMinecraft.onDraw(screen, screen.getMinecraft().font, event.getPoseStack());
diff --recursive --unified --new-file 1.19.2/forge/src/main/resources/META-INF/mods.toml 1.18.2/forge/src/main/resources/META-INF/mods.toml
--- 1.19.2/forge/src/main/resources/META-INF/mods.toml	2025-05-27 12:20:42.408916700 +0300
+++ 1.18.2/forge/src/main/resources/META-INF/mods.toml	2025-05-27 12:20:42.390134100 +0300
@@ -26,7 +26,7 @@
 modId = "forge"
 type = "required"
 mandatory = true
-versionRange = "[42,44)"
+versionRange = "[40,41)"
 ordering = "NONE"
 side = "CLIENT"
 
@@ -34,7 +34,7 @@
 modId = "minecraft"
 type = "required"
 mandatory = true
-versionRange = "[1.19.1,1.19.2]"
+versionRange = "1.18.2"
 ordering = "NONE"
 side = "CLIENT"
 
diff --recursive --unified --new-file 1.19.2/forge/src/main/resources/pack.mcmeta 1.18.2/forge/src/main/resources/pack.mcmeta
--- 1.19.2/forge/src/main/resources/pack.mcmeta	2025-05-27 12:20:42.409924300 +0300
+++ 1.18.2/forge/src/main/resources/pack.mcmeta	2025-05-27 12:20:42.391638500 +0300
@@ -1,6 +1,6 @@
 {
   "pack": {
-    "pack_format": 9,
+    "pack_format": 8,
     "description": "In-Game Account Switcher"
   }
 }
diff --recursive --unified --new-file 1.19.2/root/build.gradle.kts 1.18.2/root/build.gradle.kts
--- 1.19.2/root/build.gradle.kts	2025-05-27 12:20:42.409924300 +0300
+++ 1.18.2/root/build.gradle.kts	2025-05-27 12:20:42.391638500 +0300
@@ -25,7 +25,7 @@
 java.targetCompatibility = JavaVersion.VERSION_17
 java.toolchain.languageVersion = JavaLanguageVersion.of(17)
 group = "ru.vidtu.ias"
-base.archivesName = "IAS-1.19.2"
+base.archivesName = "IAS-1.18.2"
 description = "This mod allows you to change your logged in account in-game, without restarting Minecraft."
 
 repositories {
@@ -43,7 +43,7 @@
     compileOnlyApi(libs.error.prone.annotations)
 
     // Minecraft (Provided)
-    minecraft(libs.minecraft.mc1192)
+    minecraft(libs.minecraft.mc1182)
     mappings(loom.officialMojangMappings())
 
     // Mixin
@@ -78,7 +78,7 @@
             "Specification-Title" to "In-Game Account Switcher",
             "Specification-Version" to version,
             "Specification-Vendor" to "VidTu",
-            "Implementation-Title" to "IAS-1.19.2",
+            "Implementation-Title" to "IAS-1.18.2",
             "Implementation-Version" to version,
             "Implementation-Vendor" to "VidTu"
         )
diff --recursive --unified --new-file 1.19.2/root/src/main/java/ru/vidtu/ias/IASMinecraft.java 1.18.2/root/src/main/java/ru/vidtu/ias/IASMinecraft.java
--- 1.19.2/root/src/main/java/ru/vidtu/ias/IASMinecraft.java	2025-05-27 12:20:42.410928800 +0300
+++ 1.18.2/root/src/main/java/ru/vidtu/ias/IASMinecraft.java	2025-05-27 12:20:42.392741600 +0300
@@ -22,6 +22,7 @@
 import com.mojang.authlib.GameProfile;
 import com.mojang.authlib.minecraft.UserApiService;
 import com.mojang.authlib.properties.PropertyMap;
+import com.mojang.authlib.yggdrasil.YggdrasilAuthenticationService;
 import com.mojang.blaze3d.vertex.PoseStack;
 import net.minecraft.SharedConstants;
 import net.minecraft.client.Minecraft;
@@ -39,10 +40,9 @@
 import net.minecraft.client.gui.screens.TitleScreen;
 import net.minecraft.client.gui.screens.multiplayer.JoinMultiplayerScreen;
 import net.minecraft.client.gui.screens.social.PlayerSocialManager;
-import net.minecraft.client.multiplayer.ProfileKeyPairManager;
-import net.minecraft.client.multiplayer.chat.report.ReportEnvironment;
-import net.minecraft.client.multiplayer.chat.report.ReportingContext;
 import net.minecraft.network.chat.Component;
+import net.minecraft.network.chat.TextComponent;
+import net.minecraft.network.chat.TranslatableComponent;
 import net.minecraft.resources.ResourceLocation;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -56,6 +56,7 @@
 import ru.vidtu.ias.utils.exceptions.FriendlyException;
 
 import java.nio.file.Path;
+import java.util.Objects;
 import java.util.Optional;
 import java.util.concurrent.CompletableFuture;
 import java.util.function.Consumer;
@@ -69,7 +70,7 @@
     /**
      * Toast for nick warning.
      */
-    public static final SystemToast.SystemToastIds NICK_WARN = SystemToast.SystemToastIds.UNSECURE_SERVER_WARNING;
+    public static final SystemToast.SystemToastIds NICK_WARN = SystemToast.SystemToastIds.WORLD_ACCESS_FAILURE;
 
     /**
      * Main mod UI sprite.
@@ -77,6 +78,12 @@
     public static final ResourceLocation SPRITE = new ResourceLocation("ias", "textures/gui/sprite.png");
 
     /**
+     * Forge 1.18.2 doesn't have an API for game shutting down.
+     * This is Mixin'ed and this field is set to true only on Forge.
+     */
+    public static boolean hackyMixinClosing = false;
+
+    /**
      * Logger for this class.
      */
     private static final Logger LOGGER = LoggerFactory.getLogger("IAS/IASMinecraft");
@@ -94,7 +101,12 @@
     /**
      * Current text.
      */
-    private static Component text = Component.translatable("ias.title", "(not loaded for some reason)");
+    private static Component text = new TranslatableComponent("ias.title", "(not loaded for some reason)");
+
+    /**
+     * Authentication service.
+     */
+    private static YggdrasilAuthenticationService service;
 
     /**
      * An instance of this class cannot be created.
@@ -170,7 +182,7 @@
             }
 
             // Add the button.
-            ImageButton button = new ImageButton(x, y, 20, 20, 0, 0, 20, SPRITE, 256, 256, btn -> minecraft.setScreen(new AccountScreen(screen)), new LegacyTooltip(screen, minecraft.font, Component.literal("In-Game Account Switcher"), 250), Component.literal("In-Game Account Switcher"));
+            ImageButton button = new ImageButton(x, y, 20, 20, 0, 0, 20, SPRITE, 256, 256, btn -> minecraft.setScreen(new AccountScreen(screen)), new LegacyTooltip(screen, minecraft.font, new TextComponent("In-Game Account Switcher"), 250), new TextComponent("In-Game Account Switcher"));
             buttonAdder.accept(button);
         }
 
@@ -212,7 +224,7 @@
             }
 
             // Add the button.
-            ImageButton button = new ImageButton(x, y, 20, 20, 0, 0, 20, SPRITE, 256, 256, btn -> minecraft.setScreen(new AccountScreen(screen)), new LegacyTooltip(screen, minecraft.font, Component.literal("In-Game Account Switcher"), 250), Component.literal("In-Game Account Switcher"));
+            ImageButton button = new ImageButton(x, y, 20, 20, 0, 0, 20, SPRITE, 256, 256, btn -> minecraft.setScreen(new AccountScreen(screen)), new LegacyTooltip(screen, minecraft.font, new TextComponent("In-Game Account Switcher"), 250), new TextComponent("In-Game Account Switcher"));
             buttonAdder.accept(button);
         }
 
@@ -225,7 +237,7 @@
             Integer cy = Expression.parsePosition(IASConfig.titleTextY, width, height);
             Font font = minecraft.font;
             User user = minecraft.getUser();
-            text = Component.translatable("ias.title", user != null ? user.getName() : "(broken by mods)");
+            text = new TranslatableComponent("ias.title", user != null ? user.getName() : "(broken by mods)");
             textX = cx == null || cy == null ? (width - font.width(text)) / 2 : switch (IASConfig.titleTextAlign) {
                 case LEFT -> cx;
                 case CENTER -> cx - font.width(text) / 2;
@@ -243,7 +255,7 @@
             Integer cy = Expression.parsePosition(IASConfig.serversTextY, width, height);
             Font font = minecraft.font;
             User user = minecraft.getUser();
-            text = Component.translatable("ias.title", user != null ? user.getName() : "(broken by mods)");
+            text = new TranslatableComponent("ias.title", user != null ? user.getName() : "(broken by mods)");
             textX = cx == null || cy == null ? (width - font.width(text)) / 2 : switch (IASConfig.serversTextAlign) {
                 case LEFT -> cx;
                 case CENTER -> cx - font.width(text) / 2;
@@ -263,7 +275,7 @@
 
         // Display the toast.
         ToastComponent toasts = minecraft.getToasts();
-        toasts.addToast(SystemToast.multiline(minecraft, NICK_WARN, Component.literal("In-Game Account Switcher"), Component.translatable(key, name)));
+        toasts.addToast(SystemToast.multiline(minecraft, NICK_WARN, new TextComponent("In-Game Account Switcher"), new TranslatableComponent(key, name)));
     }
 
     /**
@@ -318,7 +330,8 @@
             UserApiService apiService;
             if (online) {
                 try {
-                    apiService = accessor.ias$authenticationService().createUserApiService(data.token());
+                    Objects.requireNonNull(service, "Authentication service is not captured.");
+                    apiService = service.createUserApiService(data.token());
                 } catch (Throwable t) {
                     // Rethrow.
                     throw new RuntimeException("Unable to create user API service.", t);
@@ -327,8 +340,6 @@
                 apiService = UserApiService.OFFLINE;
             }
             PlayerSocialManager social = new PlayerSocialManager(minecraft, apiService);
-            ProfileKeyPairManager keyPair = new ProfileKeyPairManager(apiService, user.getProfileId(), minecraft.gameDirectory.toPath());
-            ReportingContext reporting = ReportingContext.create(ReportEnvironment.local(), apiService);
             GameProfile gameProfile = minecraft.getMinecraftSessionService().fillProfileProperties(user.getGameProfile(), false);
             PropertyMap propertyMap = new PropertyMap();
             propertyMap.putAll(gameProfile.getProperties());
@@ -341,8 +352,6 @@
                 accessor.ias$userApiService(apiService);
                 accessor.ias$profileProperties(propertyMap);
                 accessor.ias$playerSocialManager(social);
-                accessor.ias$profileKeyPairManager(keyPair);
-                accessor.ias$reportingContext(reporting);
                 minecraft.updateTitle();
                 LOGGER.info("IAS: Flushed user.");
             });
@@ -354,4 +363,13 @@
             throw new RuntimeException("Unable to change account to: " + data, t);
         });
     }
+
+    /**
+     * Sets the service.
+     *
+     * @param service New authentication service
+     */
+    public static void service(YggdrasilAuthenticationService service) {
+        IASMinecraft.service = service;
+    }
 }
diff --recursive --unified --new-file 1.19.2/root/src/main/java/ru/vidtu/ias/legacy/SkinWidget.java 1.18.2/root/src/main/java/ru/vidtu/ias/legacy/SkinWidget.java
--- 1.19.2/root/src/main/java/ru/vidtu/ias/legacy/SkinWidget.java	2025-05-27 12:20:42.413098700 +0300
+++ 1.18.2/root/src/main/java/ru/vidtu/ias/legacy/SkinWidget.java	2025-05-27 12:20:42.395825200 +0300
@@ -32,7 +32,7 @@
 import net.minecraft.client.renderer.RenderType;
 import net.minecraft.client.renderer.texture.OverlayTexture;
 import net.minecraft.client.sounds.SoundManager;
-import net.minecraft.network.chat.Component;
+import net.minecraft.network.chat.TextComponent;
 import net.minecraft.util.Mth;
 
 import java.util.function.Supplier;
@@ -80,7 +80,7 @@
      */
     public SkinWidget(int x, int y, int width, int height, EntityModelSet models, Supplier<Skin> skin) {
         // Assign.
-        super(x, y, width, height, Component.empty());
+        super(x, y, width, height, TextComponent.EMPTY);
         this.skin = skin;
 
         // Prepare models.
diff --recursive --unified --new-file 1.19.2/root/src/main/java/ru/vidtu/ias/mixins/MinecraftAccessor.java 1.18.2/root/src/main/java/ru/vidtu/ias/mixins/MinecraftAccessor.java
--- 1.19.2/root/src/main/java/ru/vidtu/ias/mixins/MinecraftAccessor.java	2025-05-27 12:20:42.414099200 +0300
+++ 1.18.2/root/src/main/java/ru/vidtu/ias/mixins/MinecraftAccessor.java	2025-05-27 12:20:42.397212000 +0300
@@ -21,12 +21,9 @@
 
 import com.mojang.authlib.minecraft.UserApiService;
 import com.mojang.authlib.properties.PropertyMap;
-import com.mojang.authlib.yggdrasil.YggdrasilAuthenticationService;
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.User;
 import net.minecraft.client.gui.screens.social.PlayerSocialManager;
-import net.minecraft.client.multiplayer.ProfileKeyPairManager;
-import net.minecraft.client.multiplayer.chat.report.ReportingContext;
 import org.spongepowered.asm.mixin.Mixin;
 import org.spongepowered.asm.mixin.Mutable;
 import org.spongepowered.asm.mixin.gen.Accessor;
@@ -50,14 +47,6 @@
     void ias$user(User user);
 
     /**
-     * Gets the authentication service.
-     *
-     * @return Current authentication service
-     */
-    @Accessor("authenticationService")
-    YggdrasilAuthenticationService ias$authenticationService();
-
-    /**
      * Sets the user API service.
      *
      * @param service New user API service
@@ -84,24 +73,4 @@
     @Accessor("playerSocialManager")
     @Mutable
     void ias$playerSocialManager(PlayerSocialManager manager);
-
-    /**
-     * Sets the new profile key pair manager.
-     *
-     * @param manager New profile key pair manager
-     * @see Minecraft#getProfileKeyPairManager()
-     */
-    @Accessor("profileKeyPairManager")
-    @Mutable
-    void ias$profileKeyPairManager(ProfileKeyPairManager manager);
-
-    /**
-     * Sets the new reporting context.
-     *
-     * @param context New reporting context
-     * @see Minecraft#getReportingContext()
-     */
-    @Accessor("reportingContext")
-    @Mutable
-    void ias$reportingContext(ReportingContext context);
 }
diff --recursive --unified --new-file 1.19.2/root/src/main/java/ru/vidtu/ias/mixins/MinecraftMixin.java 1.18.2/root/src/main/java/ru/vidtu/ias/mixins/MinecraftMixin.java
--- 1.19.2/root/src/main/java/ru/vidtu/ias/mixins/MinecraftMixin.java	2025-05-27 12:20:42.414099200 +0300
+++ 1.18.2/root/src/main/java/ru/vidtu/ias/mixins/MinecraftMixin.java	2025-05-27 12:20:42.397212000 +0300
@@ -19,15 +19,21 @@
 
 package ru.vidtu.ias.mixins;
 
+import com.mojang.authlib.minecraft.UserApiService;
+import com.mojang.authlib.yggdrasil.YggdrasilAuthenticationService;
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.User;
+import net.minecraft.client.main.GameConfig;
 import net.minecraft.client.resources.language.I18n;
 import org.spongepowered.asm.mixin.Final;
 import org.spongepowered.asm.mixin.Mixin;
 import org.spongepowered.asm.mixin.Shadow;
 import org.spongepowered.asm.mixin.injection.At;
 import org.spongepowered.asm.mixin.injection.Inject;
+import org.spongepowered.asm.mixin.injection.callback.CallbackInfo;
 import org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable;
+import ru.vidtu.ias.IAS;
+import ru.vidtu.ias.IASMinecraft;
 import ru.vidtu.ias.config.IASConfig;
 
 /**
@@ -49,6 +55,12 @@
         throw new AssertionError("No instances.");
     }
 
+    @Inject(method = "createUserApiService", at = @At("HEAD"))
+    public void ias$createUserApiService$head(YggdrasilAuthenticationService service, GameConfig config, CallbackInfoReturnable<UserApiService> cir) {
+        // Capture service.
+        IASMinecraft.service(service);
+    }
+
     @Inject(method = "createTitle", at = @At("RETURN"), cancellable = true)
     private void ias$createTitle$return(CallbackInfoReturnable<String> cir) {
         // Skip if not enabled or not fully loaded.
@@ -58,4 +70,13 @@
         String original = cir.getReturnValue();
         cir.setReturnValue(I18n.get("ias.bar", original, this.user.getName()));
     }
+
+    @Inject(method = "close", at = @At("HEAD"), remap = false)
+    public void ias$close$head(CallbackInfo ci) {
+        // Skip if not hacky Forge shutdown.
+        if (!IASMinecraft.hackyMixinClosing) return;
+
+        // Shut down.
+        IAS.close();
+    }
 }
diff --recursive --unified --new-file 1.19.2/root/src/main/java/ru/vidtu/ias/screen/AccountEntry.java 1.18.2/root/src/main/java/ru/vidtu/ias/screen/AccountEntry.java
--- 1.19.2/root/src/main/java/ru/vidtu/ias/screen/AccountEntry.java	2025-05-27 12:20:42.415239100 +0300
+++ 1.18.2/root/src/main/java/ru/vidtu/ias/screen/AccountEntry.java	2025-05-27 12:20:42.398228300 +0300
@@ -29,6 +29,8 @@
 import net.minecraft.client.gui.screens.Screen;
 import net.minecraft.network.chat.CommonComponents;
 import net.minecraft.network.chat.Component;
+import net.minecraft.network.chat.TextComponent;
+import net.minecraft.network.chat.TranslatableComponent;
 import net.minecraft.util.FormattedCharSequence;
 import org.jetbrains.annotations.NotNull;
 import ru.vidtu.ias.IASMinecraft;
@@ -87,9 +89,9 @@
         this.list = list;
         this.account = account;
         this.tooltip = Stream.of(
-                CommonComponents.optionNameValue(Component.translatable("ias.accounts.tip.nick"), Component.literal(this.account.name())),
-                CommonComponents.optionNameValue(Component.translatable("ias.accounts.tip.uuid"), Component.literal(this.account.uuid().toString())),
-                CommonComponents.optionNameValue(Component.translatable("ias.accounts.tip.type"), Component.translatable(this.account.typeTipKey()))
+                CommonComponents.optionNameValue(new TranslatableComponent("ias.accounts.tip.nick"), new TextComponent(this.account.name())),
+                CommonComponents.optionNameValue(new TranslatableComponent("ias.accounts.tip.uuid"), new TextComponent(this.account.uuid().toString())),
+                CommonComponents.optionNameValue(new TranslatableComponent("ias.accounts.tip.type"), new TranslatableComponent(this.account.typeTipKey()))
         ).map(Component::getVisualOrderText).toList();
     }
 
@@ -138,7 +140,7 @@
             RenderSystem.setShaderColor(1.0F, 1.0F, 1.0F, 1.0F);
             this.list.screen().blit(pose, x - 6, y - 1, 31, warning ? 10 : 0, 2, 10);
             if (mouseX >= x - 10 && mouseX <= x && mouseY >= y && mouseY <= y + height) {
-                this.list.screen().lastPass(() -> this.list.screen().renderTooltip(pose, Component.translatable("ias.accounts.tip.insecure"), mouseX, mouseY));
+                this.list.screen().lastPass(() -> this.list.screen().renderTooltip(pose, new TranslatableComponent("ias.accounts.tip.insecure"), mouseX, mouseY));
             }
         }
 
@@ -210,7 +212,7 @@
     @Override
     @NotNull
     public Component getNarration() {
-        return Component.literal(this.account.name());
+        return new TextComponent(this.account.name());
     }
 
     /**
diff --recursive --unified --new-file 1.19.2/root/src/main/java/ru/vidtu/ias/screen/AccountScreen.java 1.18.2/root/src/main/java/ru/vidtu/ias/screen/AccountScreen.java
--- 1.19.2/root/src/main/java/ru/vidtu/ias/screen/AccountScreen.java	2025-05-27 12:20:42.415239100 +0300
+++ 1.18.2/root/src/main/java/ru/vidtu/ias/screen/AccountScreen.java	2025-05-27 12:20:42.399233900 +0300
@@ -27,7 +27,7 @@
 import net.minecraft.client.gui.screens.AlertScreen;
 import net.minecraft.client.gui.screens.Screen;
 import net.minecraft.network.chat.CommonComponents;
-import net.minecraft.network.chat.Component;
+import net.minecraft.network.chat.TranslatableComponent;
 import org.jetbrains.annotations.NotNull;
 import org.lwjgl.glfw.GLFW;
 import org.slf4j.Logger;
@@ -106,7 +106,7 @@
      * @param parent Parent screen, {@code null} if none
      */
     public AccountScreen(Screen parent) {
-        super(Component.translatable("ias.accounts"));
+        super(new TranslatableComponent("ias.accounts"));
         this.parent = parent;
     }
 
@@ -117,8 +117,8 @@
 
         // Disabled check.
         if (IAS.disabled()) {
-            this.minecraft.setScreen(new AlertScreen(this::onClose, Component.translatable("ias.disabled.title").withStyle(ChatFormatting.RED),
-                    Component.translatable("ias.disabled.text"), CommonComponents.GUI_BACK, true));
+            this.minecraft.setScreen(new AlertScreen(this::onClose, new TranslatableComponent("ias.disabled.title").withStyle(ChatFormatting.RED),
+                    new TranslatableComponent("ias.disabled.text"), CommonComponents.GUI_BACK));
             return;
         }
 
@@ -134,13 +134,13 @@
 
                 // Set screen.
                 this.minecraft.setScreen(this);
-            }, Component.translatable("ias.disclaimer.title").withStyle(ChatFormatting.YELLOW),
-                    Component.translatable("ias.disclaimer.text"), Component.translatable("gui.proceed"), false));
+            }, new TranslatableComponent("ias.disclaimer.title").withStyle(ChatFormatting.YELLOW),
+                    new TranslatableComponent("ias.disclaimer.text"), new TranslatableComponent("gui.proceed")));
             return;
         }
 
         // Add search widget.
-        this.search = new LegacyEditBox(this.font, this.width / 2 - 75, 11, 150, 20, this.search, Component.translatable("ias.accounts.search"), LegacyTooltip.EMPTY, Component.translatable("ias.accounts.search").withStyle(ChatFormatting.DARK_GRAY));
+        this.search = new LegacyEditBox(this.font, this.width / 2 - 75, 11, 150, 20, this.search, new TranslatableComponent("ias.accounts.search"), LegacyTooltip.EMPTY, new TranslatableComponent("ias.accounts.search").withStyle(ChatFormatting.DARK_GRAY));
         this.addRenderableWidget(this.search);
 
         // Add skin renderer.
@@ -161,23 +161,23 @@
 
         // Add login button.
         this.loginTooltip = new LegacyTooltip(this, this.font, null, -1);
-        this.login = new Button(this.width / 2 - 50 - 100 - 4, this.height - 24 - 24, 100, 20, Component.translatable("ias.accounts.login"), btn -> this.list.login(true), this.loginTooltip);
+        this.login = new Button(this.width / 2 - 50 - 100 - 4, this.height - 24 - 24, 100, 20, new TranslatableComponent("ias.accounts.login"), btn -> this.list.login(true), this.loginTooltip);
         this.addRenderableWidget(this.login);
 
         // Add offline login button.
-        this.offlineLogin = new Button(this.width / 2 - 50 - 100 - 4, this.height - 24, 100, 20, Component.translatable("ias.accounts.offlineLogin"), btn -> this.list.login(false));
+        this.offlineLogin = new Button(this.width / 2 - 50 - 100 - 4, this.height - 24, 100, 20, new TranslatableComponent("ias.accounts.offlineLogin"), btn -> this.list.login(false));
         this.addRenderableWidget(this.offlineLogin);
 
         // Add edit button.
-        this.edit = new Button(this.width / 2 - 50, this.height - 24 - 24, 100, 20, Component.translatable("ias.accounts.edit"), btn -> this.list.edit());
+        this.edit = new Button(this.width / 2 - 50, this.height - 24 - 24, 100, 20, new TranslatableComponent("ias.accounts.edit"), btn -> this.list.edit());
         this.addRenderableWidget(this.edit);
 
         // Add delete button.
-        this.delete = new Button(this.width / 2 - 50, this.height - 24, 100, 20, Component.translatable("ias.accounts.delete"), btn -> this.list.delete(!Screen.hasShiftDown()));
+        this.delete = new Button(this.width / 2 - 50, this.height - 24, 100, 20, new TranslatableComponent("ias.accounts.delete"), btn -> this.list.delete(!Screen.hasShiftDown()));
         this.addRenderableWidget(this.delete);
 
         // Add edit button.
-        this.addRenderableWidget(new Button(this.width / 2 + 50 + 4, this.height - 24 - 24, 100, 20, Component.translatable("ias.accounts.add"), btn -> this.list.add()));
+        this.addRenderableWidget(new Button(this.width / 2 + 50 + 4, this.height - 24 - 24, 100, 20, new TranslatableComponent("ias.accounts.add"), btn -> this.list.add()));
 
         // Add delete button.
         this.addRenderableWidget(new Button(this.width / 2 + 50 + 4, this.height - 24, 100, 20, CommonComponents.GUI_BACK, btn -> this.minecraft.setScreen(this.parent)));
@@ -267,7 +267,7 @@
             this.loginTooltip.tooltip(null);
         } else {
             this.login.active = false;
-            this.loginTooltip.tooltip(Component.translatable("ias.accounts.login.offline"));
+            this.loginTooltip.tooltip(new TranslatableComponent("ias.accounts.login.offline"));
         }
 
         // Show skin.
diff --recursive --unified --new-file 1.19.2/root/src/main/java/ru/vidtu/ias/screen/AddPopupScreen.java 1.18.2/root/src/main/java/ru/vidtu/ias/screen/AddPopupScreen.java
--- 1.19.2/root/src/main/java/ru/vidtu/ias/screen/AddPopupScreen.java	2025-05-27 12:20:42.416296200 +0300
+++ 1.18.2/root/src/main/java/ru/vidtu/ias/screen/AddPopupScreen.java	2025-05-27 12:20:42.399233900 +0300
@@ -22,7 +22,7 @@
 import com.mojang.blaze3d.vertex.PoseStack;
 import net.minecraft.client.gui.screens.Screen;
 import net.minecraft.network.chat.CommonComponents;
-import net.minecraft.network.chat.Component;
+import net.minecraft.network.chat.TranslatableComponent;
 import org.jetbrains.annotations.NotNull;
 import ru.vidtu.ias.account.Account;
 import ru.vidtu.ias.legacy.LastPassRenderCallback;
@@ -61,7 +61,7 @@
      * @param handler Account handler
      */
     AddPopupScreen(Screen parent, boolean edit, Consumer<Account> handler) {
-        super(Component.translatable(edit ? "ias.edit" : "ias.add"));
+        super(new TranslatableComponent(edit ? "ias.edit" : "ias.add"));
         this.parent = parent;
         this.handler = handler;
     }
@@ -78,15 +78,15 @@
 
         // Add offline button.
         PopupButton button = new PopupButton(this.width / 2 - 75, this.height / 2 - 24, 150, 20,
-                Component.translatable("ias.add.microsoft"), btn -> this.minecraft.setScreen(new MicrosoftCryptPopupScreen(this.parent, this.handler)),
-                new LegacyTooltip(this, this.font, Component.translatable("ias.add.microsoft.tip"), 250));
+                new TranslatableComponent("ias.add.microsoft"), btn -> this.minecraft.setScreen(new MicrosoftCryptPopupScreen(this.parent, this.handler)),
+                new LegacyTooltip(this, this.font, new TranslatableComponent("ias.add.microsoft.tip"), 250));
         button.color(0.5F, 1.0F, 0.5F, true);
         this.addRenderableWidget(button);
 
         // Add offline button.
         button = new PopupButton(this.width / 2 - 75, this.height / 2, 150, 20,
-                Component.translatable("ias.add.offline"), btn -> this.minecraft.setScreen(new OfflinePopupScreen(this.parent, this.handler)),
-                new LegacyTooltip(this, this.font, Component.translatable("ias.add.offline.tip"), 250));
+                new TranslatableComponent("ias.add.offline"), btn -> this.minecraft.setScreen(new OfflinePopupScreen(this.parent, this.handler)),
+                new LegacyTooltip(this, this.font, new TranslatableComponent("ias.add.offline.tip"), 250));
         button.color(1.0F, 0.5F, 0.5F, true);
         this.addRenderableWidget(button);
 
diff --recursive --unified --new-file 1.19.2/root/src/main/java/ru/vidtu/ias/screen/ConfigScreen.java 1.18.2/root/src/main/java/ru/vidtu/ias/screen/ConfigScreen.java
--- 1.19.2/root/src/main/java/ru/vidtu/ias/screen/ConfigScreen.java	2025-05-27 12:20:42.416296200 +0300
+++ 1.18.2/root/src/main/java/ru/vidtu/ias/screen/ConfigScreen.java	2025-05-27 12:20:42.400241200 +0300
@@ -26,7 +26,7 @@
 import net.minecraft.client.gui.screens.Screen;
 import net.minecraft.client.resources.sounds.SimpleSoundInstance;
 import net.minecraft.network.chat.CommonComponents;
-import net.minecraft.network.chat.Component;
+import net.minecraft.network.chat.TranslatableComponent;
 import net.minecraft.sounds.SoundEvents;
 import org.jetbrains.annotations.NotNull;
 import org.slf4j.Logger;
@@ -122,7 +122,7 @@
      * @param parent Parent screen, {@code null} if none
      */
     public ConfigScreen(Screen parent) {
-        super(Component.translatable("ias.config"));
+        super(new TranslatableComponent("ias.config"));
         this.parent = parent;
     }
 
@@ -133,13 +133,13 @@
 
         // Disabled check.
         if (IAS.disabled()) {
-            this.minecraft.setScreen(new AlertScreen(this::onClose, Component.translatable("ias.disabled.title").withStyle(ChatFormatting.RED),
-                    Component.translatable("ias.disabled.text"), CommonComponents.GUI_BACK, true));
+            this.minecraft.setScreen(new AlertScreen(this::onClose, new TranslatableComponent("ias.disabled.title").withStyle(ChatFormatting.RED),
+                    new TranslatableComponent("ias.disabled.text"), CommonComponents.GUI_BACK));
             return;
         }
 
         // Title Text.
-        LegacyCheckbox box = new LegacyCheckbox(this.font, 5, 20, Component.translatable("ias.config.titleText"), new LegacyTooltip(this, this.font, Component.translatable("ias.config.titleText.tip"), 250), IASConfig.titleText, value -> {
+        LegacyCheckbox box = new LegacyCheckbox(this.font, 5, 20, new TranslatableComponent("ias.config.titleText"), new LegacyTooltip(this, this.font, new TranslatableComponent("ias.config.titleText.tip"), 250), IASConfig.titleText, value -> {
             IASConfig.titleText = value;
             this.titleTextX.active = value;
             this.titleTextY.active = value;
@@ -150,7 +150,7 @@
         this.addRenderableWidget(box);
 
         // Title Text X.
-        this.titleTextX = new LegacyEditBox(this.font, 9 + box.getWidth(), 20, 75, 20, this.titleTextX, Component.translatable("ias.config.titleText.x"), new LegacyTooltip(this, this.font, Component.translatable("ias.config.titleText.x.tip", Component.translatable("key.keyboard.left.alt")), 250), Component.translatable("ias.config.titleText.x").withStyle(ChatFormatting.DARK_GRAY));
+        this.titleTextX = new LegacyEditBox(this.font, 9 + box.getWidth(), 20, 75, 20, this.titleTextX, new TranslatableComponent("ias.config.titleText.x"), new LegacyTooltip(this, this.font, new TranslatableComponent("ias.config.titleText.x.tip", new TranslatableComponent("key.keyboard.left.alt")), 250), new TranslatableComponent("ias.config.titleText.x").withStyle(ChatFormatting.DARK_GRAY));
         this.titleTextX.active = box.selected();
         this.titleTextX.setEditable(box.selected());
         this.titleTextX.setMaxLength(128);
@@ -163,7 +163,7 @@
         this.addRenderableWidget(this.titleTextX);
 
         // Title Text Y.
-        this.titleTextY = new LegacyEditBox(this.font, 88 + box.getWidth(), 20, 75, 20, this.titleTextY, Component.translatable("ias.config.titleText.y"), new LegacyTooltip(this, this.font, Component.translatable("ias.config.titleText.y.tip", Component.translatable("key.keyboard.left.alt")), 250), Component.translatable("ias.config.titleText.y").withStyle(ChatFormatting.DARK_GRAY));
+        this.titleTextY = new LegacyEditBox(this.font, 88 + box.getWidth(), 20, 75, 20, this.titleTextY, new TranslatableComponent("ias.config.titleText.y"), new LegacyTooltip(this, this.font, new TranslatableComponent("ias.config.titleText.y.tip", new TranslatableComponent("key.keyboard.left.alt")), 250), new TranslatableComponent("ias.config.titleText.y").withStyle(ChatFormatting.DARK_GRAY));
         this.titleTextY.active = box.selected();
         this.titleTextY.setEditable(box.selected());
         this.titleTextY.setMaxLength(128);
@@ -176,20 +176,20 @@
         this.addRenderableWidget(this.titleTextY);
 
         // Title Text Align.
-        this.titleTextAlign = new Button(167 + box.getWidth(), 20, Math.min(150, Math.max(20, this.width - 171 - box.getWidth())), 20, CommonComponents.optionNameValue(Component.translatable("ias.config.titleTextAlign"), Component.translatable(IASConfig.titleTextAlign.toString())), btn -> {
+        this.titleTextAlign = new Button(167 + box.getWidth(), 20, Math.min(150, Math.max(20, this.width - 171 - box.getWidth())), 20, CommonComponents.optionNameValue(new TranslatableComponent("ias.config.titleTextAlign"), new TranslatableComponent(IASConfig.titleTextAlign.toString())), btn -> {
             // This could be implemented with indexing, but there aren't too many options.
             IASConfig.titleTextAlign = switch (IASConfig.titleTextAlign) {
                 case LEFT -> TextAlign.CENTER;
                 case CENTER -> TextAlign.RIGHT;
                 case RIGHT -> TextAlign.LEFT;
             };
-            btn.setMessage(CommonComponents.optionNameValue(Component.translatable("ias.config.titleTextAlign"), Component.translatable(IASConfig.titleTextAlign.toString())));
-        }, new LegacyTooltip(this, this.font, Component.translatable("ias.config.titleTextAlign.tip"), 250));
+            btn.setMessage(CommonComponents.optionNameValue(new TranslatableComponent("ias.config.titleTextAlign"), new TranslatableComponent(IASConfig.titleTextAlign.toString())));
+        }, new LegacyTooltip(this, this.font, new TranslatableComponent("ias.config.titleTextAlign.tip"), 250));
         this.titleTextAlign.active = box.selected();
         this.addRenderableWidget(this.titleTextAlign);
 
         // Title Button.
-        box = new LegacyCheckbox(this.font, 5, 44, Component.translatable("ias.config.titleButton"), new LegacyTooltip(this, this.font, Component.translatable("ias.config.titleButton.tip"), 250), IASConfig.titleButton, value -> {
+        box = new LegacyCheckbox(this.font, 5, 44, new TranslatableComponent("ias.config.titleButton"), new LegacyTooltip(this, this.font, new TranslatableComponent("ias.config.titleButton.tip"), 250), IASConfig.titleButton, value -> {
             IASConfig.titleButton = value;
             this.titleButtonX.active = value;
             this.titleButtonY.active = value;
@@ -199,7 +199,7 @@
         this.addRenderableWidget(box);
 
         // Title Button X.
-        this.titleButtonX = new LegacyEditBox(this.font, 9 + box.getWidth(), 44, 75, 20, this.titleButtonX, Component.translatable("ias.config.titleButton.x"), new LegacyTooltip(this, this.font, Component.translatable("ias.config.titleButton.x.tip", Component.translatable("key.keyboard.left.alt")), 250), Component.translatable("ias.config.titleButton.x").withStyle(ChatFormatting.DARK_GRAY));
+        this.titleButtonX = new LegacyEditBox(this.font, 9 + box.getWidth(), 44, 75, 20, this.titleButtonX, new TranslatableComponent("ias.config.titleButton.x"), new LegacyTooltip(this, this.font, new TranslatableComponent("ias.config.titleButton.x.tip", new TranslatableComponent("key.keyboard.left.alt")), 250), new TranslatableComponent("ias.config.titleButton.x").withStyle(ChatFormatting.DARK_GRAY));
         this.titleButtonX.active = box.selected();
         this.titleButtonX.setEditable(box.selected());
         this.titleButtonX.setMaxLength(128);
@@ -212,7 +212,7 @@
         this.addRenderableWidget(this.titleButtonX);
 
         // Title Button Y.
-        this.titleButtonY = new LegacyEditBox(this.font, 88 + box.getWidth(), 44, 75, 20, this.titleButtonY, Component.translatable("ias.config.titleButton.y"), new LegacyTooltip(this, this.font, Component.translatable("ias.config.titleButton.y.tip", Component.translatable("key.keyboard.left.alt")), 250), Component.translatable("ias.config.titleButton.y").withStyle(ChatFormatting.DARK_GRAY));
+        this.titleButtonY = new LegacyEditBox(this.font, 88 + box.getWidth(), 44, 75, 20, this.titleButtonY, new TranslatableComponent("ias.config.titleButton.y"), new LegacyTooltip(this, this.font, new TranslatableComponent("ias.config.titleButton.y.tip", new TranslatableComponent("key.keyboard.left.alt")), 250), new TranslatableComponent("ias.config.titleButton.y").withStyle(ChatFormatting.DARK_GRAY));
         this.titleButtonY.active = box.selected();
         this.titleButtonY.setEditable(box.selected());
         this.titleButtonY.setMaxLength(128);
@@ -225,7 +225,7 @@
         this.addRenderableWidget(this.titleButtonY);
 
         // Servers Text.
-        box = new LegacyCheckbox(this.font, 5, 68, Component.translatable("ias.config.serversText"), new LegacyTooltip(this, this.font, Component.translatable("ias.config.serversText.tip"), 250), IASConfig.serversText, value -> {
+        box = new LegacyCheckbox(this.font, 5, 68, new TranslatableComponent("ias.config.serversText"), new LegacyTooltip(this, this.font, new TranslatableComponent("ias.config.serversText.tip"), 250), IASConfig.serversText, value -> {
             IASConfig.serversText = value;
             this.serversTextX.active = value;
             this.serversTextY.active = value;
@@ -236,7 +236,7 @@
         this.addRenderableWidget(box);
 
         // Servers Text X.
-        this.serversTextX = new LegacyEditBox(this.font, 9 + box.getWidth(), 68, 75, 20, this.serversTextX, Component.translatable("ias.config.serversText.x"), new LegacyTooltip(this, this.font, Component.translatable("ias.config.serversText.x.tip", Component.translatable("key.keyboard.left.alt")), 250), Component.translatable("ias.config.serversText.x").withStyle(ChatFormatting.DARK_GRAY));
+        this.serversTextX = new LegacyEditBox(this.font, 9 + box.getWidth(), 68, 75, 20, this.serversTextX, new TranslatableComponent("ias.config.serversText.x"), new LegacyTooltip(this, this.font, new TranslatableComponent("ias.config.serversText.x.tip", new TranslatableComponent("key.keyboard.left.alt")), 250), new TranslatableComponent("ias.config.serversText.x").withStyle(ChatFormatting.DARK_GRAY));
         this.serversTextX.active = box.selected();
         this.serversTextX.setEditable(box.selected());
         this.serversTextX.setMaxLength(128);
@@ -249,7 +249,7 @@
         this.addRenderableWidget(this.serversTextX);
 
         // Servers Text Y.
-        this.serversTextY = new LegacyEditBox(this.font, 88 + box.getWidth(), 68, 75, 20, this.serversTextY, Component.translatable("ias.config.serversText.y"), new LegacyTooltip(this, this.font, Component.translatable("ias.config.serversText.y.tip", Component.translatable("key.keyboard.left.alt")), 250), Component.translatable("ias.config.serversText.y").withStyle(ChatFormatting.DARK_GRAY));
+        this.serversTextY = new LegacyEditBox(this.font, 88 + box.getWidth(), 68, 75, 20, this.serversTextY, new TranslatableComponent("ias.config.serversText.y"), new LegacyTooltip(this, this.font, new TranslatableComponent("ias.config.serversText.y.tip", new TranslatableComponent("key.keyboard.left.alt")), 250), new TranslatableComponent("ias.config.serversText.y").withStyle(ChatFormatting.DARK_GRAY));
         this.serversTextY.active = box.selected();
         this.serversTextY.setEditable(box.selected());
         this.serversTextY.setMaxLength(128);
@@ -262,20 +262,20 @@
         this.addRenderableWidget(this.serversTextY);
 
         // Servers Text Align.
-        this.serversTextAlign = new Button(167 + box.getWidth(), 68, Math.min(150, Math.max(20, this.width - 171 - box.getWidth())), 20, CommonComponents.optionNameValue(Component.translatable("ias.config.serversTextAlign"), Component.translatable(IASConfig.serversTextAlign.toString())), btn -> {
+        this.serversTextAlign = new Button(167 + box.getWidth(), 68, Math.min(150, Math.max(20, this.width - 171 - box.getWidth())), 20, CommonComponents.optionNameValue(new TranslatableComponent("ias.config.serversTextAlign"), new TranslatableComponent(IASConfig.serversTextAlign.toString())), btn -> {
             // This could be implemented with indexing, but there aren't too many options.
             IASConfig.serversTextAlign = switch (IASConfig.serversTextAlign) {
                 case LEFT -> TextAlign.CENTER;
                 case CENTER -> TextAlign.RIGHT;
                 case RIGHT -> TextAlign.LEFT;
             };
-            btn.setMessage(CommonComponents.optionNameValue(Component.translatable("ias.config.serversTextAlign"), Component.translatable(IASConfig.serversTextAlign.toString())));
-        }, new LegacyTooltip(this, this.font, Component.translatable("ias.config.serversTextAlign.tip"), 250));
+            btn.setMessage(CommonComponents.optionNameValue(new TranslatableComponent("ias.config.serversTextAlign"), new TranslatableComponent(IASConfig.serversTextAlign.toString())));
+        }, new LegacyTooltip(this, this.font, new TranslatableComponent("ias.config.serversTextAlign.tip"), 250));
         this.serversTextAlign.active = box.selected();
         this.addRenderableWidget(this.serversTextAlign);
 
         // Servers Button.
-        box = new LegacyCheckbox(this.font, 5, 92, Component.translatable("ias.config.serversButton"), new LegacyTooltip(this, this.font, Component.translatable("ias.config.serversButton.tip"), 250), IASConfig.serversButton, value -> {
+        box = new LegacyCheckbox(this.font, 5, 92, new TranslatableComponent("ias.config.serversButton"), new LegacyTooltip(this, this.font, new TranslatableComponent("ias.config.serversButton.tip"), 250), IASConfig.serversButton, value -> {
             IASConfig.serversButton = value;
             this.serversButtonX.active = value;
             this.serversButtonY.active = value;
@@ -285,7 +285,7 @@
         this.addRenderableWidget(box);
 
         // Servers Button X.
-        this.serversButtonX = new LegacyEditBox(this.font, 9 + box.getWidth(), 92, 75, 20, this.serversButtonX, Component.translatable("ias.config.serversButton.x"), new LegacyTooltip(this, this.font, Component.translatable("ias.config.serversButton.x.tip", Component.translatable("key.keyboard.left.alt")), 250), Component.translatable("ias.config.serversButton.x").withStyle(ChatFormatting.DARK_GRAY));
+        this.serversButtonX = new LegacyEditBox(this.font, 9 + box.getWidth(), 92, 75, 20, this.serversButtonX, new TranslatableComponent("ias.config.serversButton.x"), new LegacyTooltip(this, this.font, new TranslatableComponent("ias.config.serversButton.x.tip", new TranslatableComponent("key.keyboard.left.alt")), 250), new TranslatableComponent("ias.config.serversButton.x").withStyle(ChatFormatting.DARK_GRAY));
         this.serversButtonX.active = box.selected();
         this.serversButtonX.setEditable(box.selected());
         this.serversButtonX.setMaxLength(128);
@@ -298,7 +298,7 @@
         this.addRenderableWidget(this.serversButtonX);
 
         // Servers Button Y.
-        this.serversButtonY = new LegacyEditBox(this.font, 88 + box.getWidth(), 92, 75, 20, this.serversButtonY, Component.translatable("ias.config.serversButton.y"), new LegacyTooltip(this, this.font, Component.translatable("ias.config.serversButton.y.tip", Component.translatable("key.keyboard.left.alt")), 250), Component.translatable("ias.config.serversButton.y").withStyle(ChatFormatting.DARK_GRAY));
+        this.serversButtonY = new LegacyEditBox(this.font, 88 + box.getWidth(), 92, 75, 20, this.serversButtonY, new TranslatableComponent("ias.config.serversButton.y"), new LegacyTooltip(this, this.font, new TranslatableComponent("ias.config.serversButton.y.tip", new TranslatableComponent("key.keyboard.left.alt")), 250), new TranslatableComponent("ias.config.serversButton.y").withStyle(ChatFormatting.DARK_GRAY));
         this.serversButtonY.active = box.selected();
         this.serversButtonY.setEditable(box.selected());
         this.serversButtonY.setMaxLength(128);
@@ -311,11 +311,11 @@
         this.addRenderableWidget(this.serversButtonY);
 
         // No Crypt Button.
-        box = new LegacyCheckbox(this.font, 5, 116, Component.translatable("ias.config.allowNoCrypt"), new LegacyTooltip(this, this.font, Component.translatable("ias.config.allowNoCrypt.tip"), 250), IASConfig.allowNoCrypt, value -> IASConfig.allowNoCrypt = value);
+        box = new LegacyCheckbox(this.font, 5, 116, new TranslatableComponent("ias.config.allowNoCrypt"), new LegacyTooltip(this, this.font, new TranslatableComponent("ias.config.allowNoCrypt.tip"), 250), IASConfig.allowNoCrypt, value -> IASConfig.allowNoCrypt = value);
         this.addRenderableWidget(box);
 
         // Sun Server.
-        Button button = new Button(9 + box.getWidth(), 116, 200, 20, CommonComponents.optionNameValue(Component.translatable("ias.config.server"), Component.translatable(IASConfig.server.toString())), btn -> {
+        Button button = new Button(9 + box.getWidth(), 116, 200, 20, CommonComponents.optionNameValue(new TranslatableComponent("ias.config.server"), new TranslatableComponent(IASConfig.server.toString())), btn -> {
             // Update the value.
             IASConfig.server = switch (IASConfig.server) {
                 case ALWAYS -> ServerMode.AVAILABLE;
@@ -324,27 +324,27 @@
             };
 
             // Set the message.
-            btn.setMessage(CommonComponents.optionNameValue(Component.translatable("ias.config.server"), Component.translatable(IASConfig.server.toString())));
-        }, new LegacyTooltip(this, this.font, Component.translatable("ias.config.server.tip"), 250));
+            btn.setMessage(CommonComponents.optionNameValue(new TranslatableComponent("ias.config.server"), new TranslatableComponent(IASConfig.server.toString())));
+        }, new LegacyTooltip(this, this.font, new TranslatableComponent("ias.config.server.tip"), 250));
         this.addRenderableWidget(button);
 
         // Nick Warns.
-        box = new LegacyCheckbox(this.font, 5, 140, Component.translatable("ias.config.nickWarns"), new LegacyTooltip(this, this.font, Component.translatable("ias.config.nickWarns.tip"), 250), IASConfig.nickWarns, value -> IASConfig.nickWarns = value);
+        box = new LegacyCheckbox(this.font, 5, 140, new TranslatableComponent("ias.config.nickWarns"), new LegacyTooltip(this, this.font, new TranslatableComponent("ias.config.nickWarns.tip"), 250), IASConfig.nickWarns, value -> IASConfig.nickWarns = value);
         this.addRenderableWidget(box);
 
         // Password Echoing.
-        box = new LegacyCheckbox(this.font, 10 + box.getWidth(), 140, Component.translatable("ias.config.passwordEchoing"), new LegacyTooltip(this, this.font, Component.translatable("ias.config.passwordEchoing.tip"), 250), IASConfig.passwordEchoing, value -> IASConfig.passwordEchoing = value);
+        box = new LegacyCheckbox(this.font, 10 + box.getWidth(), 140, new TranslatableComponent("ias.config.passwordEchoing"), new LegacyTooltip(this, this.font, new TranslatableComponent("ias.config.passwordEchoing.tip"), 250), IASConfig.passwordEchoing, value -> IASConfig.passwordEchoing = value);
         this.addRenderableWidget(box);
 
         // Unexpected Pigs.
-        box = new LegacyCheckbox(this.font, 5, 164, Component.translatable("ias.config.unexpectedPigs"), new LegacyTooltip(this, this.font, Component.translatable("ias.config.unexpectedPigs.tip"), 250), IASConfig.unexpectedPigs, value -> {
+        box = new LegacyCheckbox(this.font, 5, 164, new TranslatableComponent("ias.config.unexpectedPigs"), new LegacyTooltip(this, this.font, new TranslatableComponent("ias.config.unexpectedPigs.tip"), 250), IASConfig.unexpectedPigs, value -> {
             IASConfig.unexpectedPigs = value;
             this.minecraft.getSoundManager().play(SimpleSoundInstance.forUI(value ? SoundEvents.PIG_AMBIENT : SoundEvents.PIG_DEATH, 1.0F));
         });
         this.addRenderableWidget(box);
 
         // Bar Name.
-        box = new LegacyCheckbox(this.font, 5, 188, Component.translatable("ias.config.barNick"), new LegacyTooltip(this, this.font, Component.translatable("ias.config.barNick.tip"), 250), IASConfig.barNick, value -> {
+        box = new LegacyCheckbox(this.font, 5, 188, new TranslatableComponent("ias.config.barNick"), new LegacyTooltip(this, this.font, new TranslatableComponent("ias.config.barNick.tip"), 250), IASConfig.barNick, value -> {
             IASConfig.barNick = value;
             this.minecraft.updateTitle();
         });
@@ -384,7 +384,7 @@
         if (Screen.hasAltDown()) {
             pose.pushPose();
             pose.translate(0.0F, 0.0F, 100.0F);
-            this.renderTooltip(pose, Component.translatable("ias.config.mousePos", mouseX, mouseY), mouseX, mouseY);
+            this.renderTooltip(pose, new TranslatableComponent("ias.config.mousePos", mouseX, mouseY), mouseX, mouseY);
             pose.popPose();
         }
 
diff --recursive --unified --new-file 1.19.2/root/src/main/java/ru/vidtu/ias/screen/DeletePopupScreen.java 1.18.2/root/src/main/java/ru/vidtu/ias/screen/DeletePopupScreen.java
--- 1.19.2/root/src/main/java/ru/vidtu/ias/screen/DeletePopupScreen.java	2025-05-27 12:20:42.416296200 +0300
+++ 1.18.2/root/src/main/java/ru/vidtu/ias/screen/DeletePopupScreen.java	2025-05-27 12:20:42.400241200 +0300
@@ -24,6 +24,7 @@
 import net.minecraft.client.gui.screens.Screen;
 import net.minecraft.network.chat.CommonComponents;
 import net.minecraft.network.chat.Component;
+import net.minecraft.network.chat.TranslatableComponent;
 import org.jetbrains.annotations.NotNull;
 import org.lwjgl.glfw.GLFW;
 import ru.vidtu.ias.account.Account;
@@ -72,9 +73,9 @@
      * @param handler Callback handler
      */
     DeletePopupScreen(Screen parent, Account account, Runnable handler) {
-        super(Component.translatable("ias.delete"));
+        super(new TranslatableComponent("ias.delete"));
         this.parent = parent;
-        this.prompt = Component.translatable("ias.delete.confirm", account.name());
+        this.prompt = new TranslatableComponent("ias.delete.confirm", account.name());
         this.handler = handler;
     }
 
@@ -95,7 +96,7 @@
 
             // Close.
             this.onClose();
-        }, new LegacyTooltip(this, this.font, Component.translatable("ias.delete.hint", Component.translatable("key.keyboard.left.shift")), 250));
+        }, new LegacyTooltip(this, this.font, new TranslatableComponent("ias.delete.hint", new TranslatableComponent("key.keyboard.left.shift")), 250));
         button.color(1.0F, 0.5F, 0.5F, true);
         this.addRenderableWidget(button);
 
diff --recursive --unified --new-file 1.19.2/root/src/main/java/ru/vidtu/ias/screen/LoginPopupScreen.java 1.18.2/root/src/main/java/ru/vidtu/ias/screen/LoginPopupScreen.java
--- 1.19.2/root/src/main/java/ru/vidtu/ias/screen/LoginPopupScreen.java	2025-05-27 12:20:42.417373100 +0300
+++ 1.18.2/root/src/main/java/ru/vidtu/ias/screen/LoginPopupScreen.java	2025-05-27 12:20:42.401798400 +0300
@@ -21,11 +21,17 @@
 
 import com.mojang.blaze3d.vertex.PoseStack;
 import net.minecraft.ChatFormatting;
+import net.minecraft.Util;
+import net.minecraft.client.gui.chat.NarratorChatListener;
 import net.minecraft.client.gui.components.MultiLineLabel;
 import net.minecraft.client.gui.screens.Screen;
+import net.minecraft.network.chat.ChatType;
 import net.minecraft.network.chat.CommonComponents;
 import net.minecraft.network.chat.Component;
+import net.minecraft.network.chat.MutableComponent;
 import net.minecraft.network.chat.Style;
+import net.minecraft.network.chat.TextComponent;
+import net.minecraft.network.chat.TranslatableComponent;
 import net.minecraft.util.FormattedCharSequence;
 import org.jetbrains.annotations.NotNull;
 import org.slf4j.Logger;
@@ -75,7 +81,7 @@
      * Current stage.
      */
     @SuppressWarnings("FieldAccessedSynchronizedAndUnsynchronized") // <- toString()
-    private Component stage = Component.translatable(MicrosoftAccount.INITIALIZING).withStyle(ChatFormatting.YELLOW);
+    private Component stage = new TranslatableComponent(MicrosoftAccount.INITIALIZING).withStyle(ChatFormatting.YELLOW);
 
     /**
      * Current stage label.
@@ -109,12 +115,17 @@
     private MultiLineLabel errorNote;
 
     /**
+     * Maximum error width.
+     */
+    private int errorWidth;
+
+    /**
      * Creates a new login screen.
      *
      * @param parent Parent screen
      */
     LoginPopupScreen(Screen parent) {
-        super(Component.translatable("ias.login"));
+        super(new TranslatableComponent("ias.login"));
         this.parent = parent;
     }
 
@@ -150,7 +161,7 @@
         // Add password box, if future exists.
         if (this.passFuture != null) {
             // Add password box.
-            this.password = new PopupBox(this.font, this.width / 2 - 100, this.height / 2 - 10 + 5, 178, 20, this.password, Component.translatable("ias.password"), () -> {
+            this.password = new PopupBox(this.font, this.width / 2 - 100, this.height / 2 - 10 + 5, 178, 20, this.password, new TranslatableComponent("ias.password"), () -> {
                 // Prevent NPE, just in case.
                 if (this.passFuture == null || this.password == null) return;
                 String value = this.password.getValue();
@@ -158,13 +169,13 @@
 
                 // Complete the future.
                 this.passFuture.complete(value);
-            }, true, Component.translatable("ias.password.hint").withStyle(ChatFormatting.DARK_GRAY));
+            }, true, new TranslatableComponent("ias.password.hint").withStyle(ChatFormatting.DARK_GRAY));
             this.password.setFormatter((s, i) -> IASConfig.passwordEchoing ? FormattedCharSequence.forward("*".repeat(s.length()), Style.EMPTY) : FormattedCharSequence.EMPTY);
             this.password.setMaxLength(32);
             this.addRenderableWidget(this.password);
 
             // Add enter password button.
-            PopupButton button = new PopupButton(this.width / 2 - 100 + 180, this.height / 2 - 10 + 5, 20, 20, Component.literal(">>"), btn -> {
+            PopupButton button = new PopupButton(this.width / 2 - 100 + 180, this.height / 2 - 10 + 5, 20, 20, new TextComponent(">>"), btn -> {
                 // Prevent NPE, just in case.
                 if (this.passFuture == null || this.password == null) return;
                 String value = this.password.getValue();
@@ -178,7 +189,7 @@
             this.password.setResponder(value -> button.active = !value.isBlank());
 
             // Create tip.
-            this.cryptPasswordTip = MultiLineLabel.create(this.font, Component.translatable("ias.password.tip"), 320);
+            this.cryptPasswordTip = MultiLineLabel.create(this.font, new TranslatableComponent("ias.password.tip"), 320);
         }
     }
 
@@ -240,13 +251,13 @@
                 // Label is unbaked.
                 if (this.label == null) {
                     // Get the component.
-                    Component component = Objects.requireNonNullElse(this.stage, Component.empty());
+                    Component component = Objects.requireNonNullElse(this.stage, TextComponent.EMPTY);
 
                     // Bake the label.
                     this.label = MultiLineLabel.create(this.font, component, 240);
 
                     // Narrate.
-                    this.minecraft.getNarrator().sayNow(component);
+                    NarratorChatListener.INSTANCE.handle(ChatType.SYSTEM, component, Util.NIL_UUID);
                 }
 
                 // Render the label.
@@ -257,7 +268,11 @@
             if (Float.isFinite(this.error)) {
                 // Create it first.
                 if (this.errorNote == null) {
-                    this.errorNote = MultiLineLabel.create(this.font, Component.translatable("ias.error.note").withStyle(ChatFormatting.AQUA), 245);
+                    MutableComponent err = new TranslatableComponent("ias.error.note").withStyle(ChatFormatting.AQUA);
+                    this.errorNote = MultiLineLabel.create(this.font, err, 245);
+                    this.errorWidth = this.font.split(err, 245).stream()
+                            .mapToInt(this.font::width)
+                            .max().orElse(0);
                 }
 
                 // Wow, opacity. So fluent.
@@ -272,7 +287,7 @@
                 }
 
                 // Render BG.
-                int w = this.errorNote.getWidth() / 4 + 2;
+                int w = this.errorWidth / 4 + 2;
                 int h = (this.errorNote.getLineCount() * 9) / 2 + 1;
                 int cx = this.width / 2;
                 int sy = this.height / 2 + 87;
@@ -325,7 +340,7 @@
         if (this != this.minecraft.screen) return;
 
         // Flush the stage.
-        Component component = Component.translatable(stage, args).withStyle(ChatFormatting.YELLOW);
+        Component component = new TranslatableComponent(stage, args).withStyle(ChatFormatting.YELLOW);
         synchronized (this.lock) {
             this.stage = component;
             this.label = null;
@@ -426,7 +441,7 @@
         // Flush the stage.
         FriendlyException probable = FriendlyException.friendlyInChain(error);
         String key = probable != null ? probable.key() : "ias.error";
-        Component component = Component.translatable(key).withStyle(ChatFormatting.RED);
+        Component component = new TranslatableComponent(key).withStyle(ChatFormatting.RED);
         synchronized (this.lock) {
             this.stage = component;
             this.label = null;
diff --recursive --unified --new-file 1.19.2/root/src/main/java/ru/vidtu/ias/screen/MicrosoftCryptPopupScreen.java 1.18.2/root/src/main/java/ru/vidtu/ias/screen/MicrosoftCryptPopupScreen.java
--- 1.19.2/root/src/main/java/ru/vidtu/ias/screen/MicrosoftCryptPopupScreen.java	2025-05-27 12:20:42.417373100 +0300
+++ 1.18.2/root/src/main/java/ru/vidtu/ias/screen/MicrosoftCryptPopupScreen.java	2025-05-27 12:20:42.401798400 +0300
@@ -22,7 +22,7 @@
 import com.mojang.blaze3d.vertex.PoseStack;
 import net.minecraft.client.gui.screens.Screen;
 import net.minecraft.network.chat.CommonComponents;
-import net.minecraft.network.chat.Component;
+import net.minecraft.network.chat.TranslatableComponent;
 import org.jetbrains.annotations.NotNull;
 import org.lwjgl.glfw.GLFW;
 import ru.vidtu.ias.account.Account;
@@ -74,7 +74,7 @@
      * @param handler Account handler
      */
     MicrosoftCryptPopupScreen(Screen parent, Consumer<Account> handler) {
-        super(Component.translatable("ias.microsoft"));
+        super(new TranslatableComponent("ias.microsoft"));
         this.parent = parent;
         this.handler = handler;
     }
@@ -91,26 +91,26 @@
 
         // Add password button.
         PopupButton button = new PopupButton(this.width / 2 - 75, this.height / 2 - 24 - 12, 150, 20,
-                Component.translatable("ias.microsoft.password"), btn -> this.minecraft.setScreen(new MicrosoftPopupScreen(this.parent, this.handler, null)),
-                new LegacyTooltip(this, this.font, Component.translatable("ias.microsoft.password.tip"), 250));
+                new TranslatableComponent("ias.microsoft.password"), btn -> this.minecraft.setScreen(new MicrosoftPopupScreen(this.parent, this.handler, null)),
+                new LegacyTooltip(this, this.font, new TranslatableComponent("ias.microsoft.password.tip"), 250));
         button.color(0.5F, 1.0F, 0.5F, true);
         this.addRenderableWidget(button);
 
         // Add hardware button.
         button = new PopupButton(this.width / 2 - 75, this.height / 2 - 12, 150, 20,
-                Component.translatable("ias.microsoft.hardware"), btn -> this.minecraft.setScreen(new MicrosoftPopupScreen(this.parent, this.handler, HardwareCrypt.INSTANCE_V2)),
-                new LegacyTooltip(this, this.font, Component.translatable("ias.microsoft.hardware.tip"), 250));
+                new TranslatableComponent("ias.microsoft.hardware"), btn -> this.minecraft.setScreen(new MicrosoftPopupScreen(this.parent, this.handler, HardwareCrypt.INSTANCE_V2)),
+                new LegacyTooltip(this, this.font, new TranslatableComponent("ias.microsoft.hardware.tip"), 250));
         button.color(1.0F, 1.0F, 0.5F, true);
         this.addRenderableWidget(button);
 
         // Add plain button.
         if (IASConfig.allowNoCrypt) {
-            this.plainTooltip = new LegacyTooltip(this, this.font, Component.translatable("ias.microsoft.plain.tip.off", Component.translatable("key.keyboard.left.alt"), GLFW.glfwGetKeyName(GLFW.GLFW_KEY_Y, GLFW.GLFW_KEY_UNKNOWN)), 250);
+            this.plainTooltip = new LegacyTooltip(this, this.font, new TranslatableComponent("ias.microsoft.plain.tip.off", new TranslatableComponent("key.keyboard.left.alt"), GLFW.glfwGetKeyName(GLFW.GLFW_KEY_Y, GLFW.GLFW_KEY_UNKNOWN)), 250);
         } else {
-            this.plainTooltip = new LegacyTooltip(this, this.font, Component.translatable("ias.microsoft.plain.tip.no"), 250);
+            this.plainTooltip = new LegacyTooltip(this, this.font, new TranslatableComponent("ias.microsoft.plain.tip.no"), 250);
         }
         this.plain = new PopupButton(this.width / 2 - 75, this.height / 2 + 12, 150, 20,
-                Component.translatable("ias.microsoft.plain"), btn -> this.minecraft.setScreen(new MicrosoftPopupScreen(this.parent, this.handler, DummyCrypt.INSTANCE)), this.plainTooltip);
+                new TranslatableComponent("ias.microsoft.plain"), btn -> this.minecraft.setScreen(new MicrosoftPopupScreen(this.parent, this.handler, DummyCrypt.INSTANCE)), this.plainTooltip);
         this.plain.color(1.0F, 0.5F, 0.5F, true);
         this.plain.active = false;
         this.addRenderableWidget(this.plain);
@@ -188,7 +188,7 @@
             this.plain.active = true;
 
             // Recolor button and update tooltip.
-            this.plainTooltip.tooltip(Component.translatable("ias.microsoft.plain.tip.on"));
+            this.plainTooltip.tooltip(new TranslatableComponent("ias.microsoft.plain.tip.on"));
             this.plain.color(1.0F, 0.25F, 0.25F, false);
         }
 
diff --recursive --unified --new-file 1.19.2/root/src/main/java/ru/vidtu/ias/screen/MicrosoftPopupScreen.java 1.18.2/root/src/main/java/ru/vidtu/ias/screen/MicrosoftPopupScreen.java
--- 1.19.2/root/src/main/java/ru/vidtu/ias/screen/MicrosoftPopupScreen.java	2025-05-27 12:20:42.417373100 +0300
+++ 1.18.2/root/src/main/java/ru/vidtu/ias/screen/MicrosoftPopupScreen.java	2025-05-27 12:20:42.401798400 +0300
@@ -23,13 +23,18 @@
 import net.minecraft.ChatFormatting;
 import net.minecraft.Util;
 import net.minecraft.client.KeyboardHandler;
+import net.minecraft.client.gui.chat.NarratorChatListener;
 import net.minecraft.client.gui.components.Button;
 import net.minecraft.client.gui.components.MultiLineLabel;
 import net.minecraft.client.gui.screens.Screen;
 import net.minecraft.client.resources.language.I18n;
+import net.minecraft.network.chat.ChatType;
 import net.minecraft.network.chat.CommonComponents;
 import net.minecraft.network.chat.Component;
+import net.minecraft.network.chat.MutableComponent;
 import net.minecraft.network.chat.Style;
+import net.minecraft.network.chat.TextComponent;
+import net.minecraft.network.chat.TranslatableComponent;
 import net.minecraft.util.FormattedCharSequence;
 import org.jetbrains.annotations.NotNull;
 import org.lwjgl.glfw.GLFW;
@@ -105,7 +110,7 @@
      * Current stage.
      */
     @SuppressWarnings("FieldAccessedSynchronizedAndUnsynchronized") // <- toString()
-    private Component stage = Component.translatable(MicrosoftAccount.INITIALIZING).withStyle(ChatFormatting.YELLOW);
+    private Component stage = new TranslatableComponent(MicrosoftAccount.INITIALIZING).withStyle(ChatFormatting.YELLOW);
 
     /**
      * Current stage label.
@@ -134,6 +139,11 @@
     private MultiLineLabel errorNote;
 
     /**
+     * Maximum error width.
+     */
+    private int errorWidth;
+
+    /**
      * Creates a new login screen.
      *
      * @param parent  Parent screen
@@ -141,7 +151,7 @@
      * @param crypt   Crypt method, {@code null} to use password
      */
     MicrosoftPopupScreen(Screen parent, Consumer<Account> handler, Crypt crypt) {
-        super(Component.translatable("ias.login"));
+        super(new TranslatableComponent("ias.login"));
         this.parent = parent;
         this.handler = handler;
         this.crypt = crypt;
@@ -179,7 +189,7 @@
         // Add password box, if future exists.
         if (this.crypt == null) {
             // Add password box.
-            this.password = new PopupBox(this.font, this.width / 2 - 100, this.height / 2 - 10 + 5, 178, 20, this.password, Component.translatable("ias.password"), () -> {
+            this.password = new PopupBox(this.font, this.width / 2 - 100, this.height / 2 - 10 + 5, 178, 20, this.password, new TranslatableComponent("ias.password"), () -> {
                 // Prevent NPE, just in case.
                 if (this.password == null || this.crypt != null) return;
                 String value = this.password.getValue();
@@ -192,13 +202,13 @@
 
                 // Rebuild the UI.
                 this.init(this.minecraft, this.width, this.height);
-            }, true, Component.translatable("ias.password.hint").withStyle(ChatFormatting.DARK_GRAY));
+            }, true, new TranslatableComponent("ias.password.hint").withStyle(ChatFormatting.DARK_GRAY));
             this.password.setFormatter((s, i) -> IASConfig.passwordEchoing ? FormattedCharSequence.forward("*".repeat(s.length()), Style.EMPTY) : FormattedCharSequence.EMPTY);
             this.password.setMaxLength(32);
             this.addRenderableWidget(this.password);
 
             // Add enter password button.
-            Button enterPassword = new PopupButton(this.width / 2 - 100 + 180, this.height / 2 - 10 + 5, 20, 20, Component.literal(">>"), btn -> {
+            Button enterPassword = new PopupButton(this.width / 2 - 100 + 180, this.height / 2 - 10 + 5, 20, 20, new TextComponent(">>"), btn -> {
                 // Prevent NPE, just in case.
                 if (this.password == null || this.crypt != null) return;
                 String value = this.password.getValue();
@@ -217,7 +227,7 @@
             this.password.setResponder(value -> enterPassword.active = !value.isBlank());
 
             // Create tip.
-            this.cryptPasswordTip = MultiLineLabel.create(this.font, Component.translatable("ias.password.tip"), 320);
+            this.cryptPasswordTip = MultiLineLabel.create(this.font, new TranslatableComponent("ias.password.tip"), 320);
         }
 
         // Try to open the server.
@@ -249,8 +259,8 @@
                 // Log it and display progress.
                 LOGGER.info("IAS: Opening client link...");
                 this.stage(MicrosoftAccount.CLIENT_BROWSER,
-                        Component.literal(auth.uri().toString()).withStyle(ChatFormatting.GOLD),
-                        Component.literal(auth.user()).withStyle(ChatFormatting.GOLD));
+                        new TextComponent(auth.uri().toString()).withStyle(ChatFormatting.GOLD),
+                        new TextComponent(auth.user()).withStyle(ChatFormatting.GOLD));
 
                 // Copy and open link.
                 Util.getPlatform().openUri(auth.uri().toString());
@@ -387,13 +397,13 @@
                 // Label is unbaked.
                 if (this.label == null) {
                     // Get the component.
-                    Component component = Objects.requireNonNullElse(this.stage, Component.empty());
+                    Component component = Objects.requireNonNullElse(this.stage, TextComponent.EMPTY);
 
                     // Bake the label.
                     this.label = MultiLineLabel.create(this.font, component, 240);
 
                     // Narrate.
-                    this.minecraft.getNarrator().sayNow(component);
+                    NarratorChatListener.INSTANCE.handle(ChatType.SYSTEM, component, Util.NIL_UUID);
                 }
 
                 // Render the label.
@@ -404,7 +414,11 @@
             if (Float.isFinite(this.error)) {
                 // Create it first.
                 if (this.errorNote == null) {
-                    this.errorNote = MultiLineLabel.create(this.font, Component.translatable("ias.error.note").withStyle(ChatFormatting.AQUA), 245);
+                    MutableComponent err = new TranslatableComponent("ias.error.note").withStyle(ChatFormatting.AQUA);
+                    this.errorNote = MultiLineLabel.create(this.font, err, 245);
+                    this.errorWidth = this.font.split(err, 245).stream()
+                            .mapToInt(this.font::width)
+                            .max().orElse(0);
                 }
 
                 // Wow, opacity. So fluent.
@@ -419,7 +433,7 @@
                 }
 
                 // Render BG.
-                int w = this.errorNote.getWidth() / 4 + 2;
+                int w = this.errorWidth / 4 + 2;
                 int h = (this.errorNote.getLineCount() * 9) / 2 + 1;
                 int cx = this.width / 2;
                 int sy = this.height / 2 + 87;
@@ -486,7 +500,7 @@
         }
 
         // Flush the stage.
-        Component component = Component.translatable(stage, args).withStyle(ChatFormatting.YELLOW);
+        Component component = new TranslatableComponent(stage, args).withStyle(ChatFormatting.YELLOW);
         synchronized (this.lock) {
             this.stage = component;
             this.label = null;
@@ -528,7 +542,7 @@
         // Flush the stage.
         FriendlyException probable = FriendlyException.friendlyInChain(error);
         String key = probable != null ? probable.key() : "ias.error";
-        Component component = Component.translatable(key).withStyle(ChatFormatting.RED);
+        Component component = new TranslatableComponent(key).withStyle(ChatFormatting.RED);
         synchronized (this.lock) {
             this.stage = component;
             this.label = null;
diff --recursive --unified --new-file 1.19.2/root/src/main/java/ru/vidtu/ias/screen/OfflinePopupScreen.java 1.18.2/root/src/main/java/ru/vidtu/ias/screen/OfflinePopupScreen.java
--- 1.19.2/root/src/main/java/ru/vidtu/ias/screen/OfflinePopupScreen.java	2025-05-27 12:20:42.417373100 +0300
+++ 1.18.2/root/src/main/java/ru/vidtu/ias/screen/OfflinePopupScreen.java	2025-05-27 12:20:42.401798400 +0300
@@ -23,7 +23,8 @@
 import net.minecraft.ChatFormatting;
 import net.minecraft.client.gui.screens.Screen;
 import net.minecraft.network.chat.CommonComponents;
-import net.minecraft.network.chat.Component;
+import net.minecraft.network.chat.TextComponent;
+import net.minecraft.network.chat.TranslatableComponent;
 import org.jetbrains.annotations.NotNull;
 import org.lwjgl.glfw.GLFW;
 import ru.vidtu.ias.account.Account;
@@ -86,7 +87,7 @@
      * @param handler Account handler
      */
     OfflinePopupScreen(Screen parent, Consumer<Account> handler) {
-        super(Component.translatable("ias.offline"));
+        super(new TranslatableComponent("ias.offline"));
         this.parent = parent;
         this.handler = handler;
     }
@@ -103,7 +104,7 @@
 
         // Add name box.
         //noinspection StringConcatenationMissingWhitespace
-        this.name = new PopupBox(this.font, this.width / 2 - 75, this.height / 2 - 10 + 5, 148, 20, this.name, Component.translatable("ias.offline.nick"), this::done, false, Component.literal(IASConfig.unexpectedPigs ? ("Boar" + this.hashCode()) : "Steve").withStyle(ChatFormatting.DARK_GRAY));
+        this.name = new PopupBox(this.font, this.width / 2 - 75, this.height / 2 - 10 + 5, 148, 20, this.name, new TranslatableComponent("ias.offline.nick"), this::done, false, new TextComponent(IASConfig.unexpectedPigs ? ("Boar" + this.hashCode()) : "Steve").withStyle(ChatFormatting.DARK_GRAY));
         this.name.setMaxLength(16);
         this.addRenderableWidget(this.name);
 
@@ -209,7 +210,7 @@
             this.done.active = false;
 
             // Tooltip.
-            this.doneTooltip.tooltip(Component.translatable("ias.offline.nick.blank"));
+            this.doneTooltip.tooltip(new TranslatableComponent("ias.offline.nick.blank"));
 
             // Update color.
             this.done.color(1.0F, 0.5F, 0.5F, instant);
@@ -234,7 +235,7 @@
             }
 
             // Tooltip.
-            this.doneTooltip.tooltip(Component.translatable("ias.offline.nick.short", Component.translatable("key.keyboard.left.alt")));
+            this.doneTooltip.tooltip(new TranslatableComponent("ias.offline.nick.short", new TranslatableComponent("key.keyboard.left.alt")));
 
             // Don't process.
             return;
@@ -252,7 +253,7 @@
             }
 
             // Tooltip.
-            this.doneTooltip.tooltip(Component.translatable("ias.offline.nick.long", Component.translatable("key.keyboard.left.alt")));
+            this.doneTooltip.tooltip(new TranslatableComponent("ias.offline.nick.long", new TranslatableComponent("key.keyboard.left.alt")));
 
             // Don't process.
             return;
@@ -275,7 +276,7 @@
             }
 
             // Tooltip.
-            this.doneTooltip.tooltip(Component.translatable("ias.offline.nick.chars", Character.toString(c), Component.translatable("key.keyboard.left.alt")));
+            this.doneTooltip.tooltip(new TranslatableComponent("ias.offline.nick.chars", Character.toString(c), new TranslatableComponent("key.keyboard.left.alt")));
 
             // Don't process.
             return;
diff --recursive --unified --new-file 1.19.2/root/src/main/java/ru/vidtu/ias/screen/PopupBox.java 1.18.2/root/src/main/java/ru/vidtu/ias/screen/PopupBox.java
--- 1.19.2/root/src/main/java/ru/vidtu/ias/screen/PopupBox.java	2025-05-27 12:20:42.418380800 +0300
+++ 1.18.2/root/src/main/java/ru/vidtu/ias/screen/PopupBox.java	2025-05-27 12:20:42.403182500 +0300
@@ -25,6 +25,8 @@
 import net.minecraft.client.gui.screens.Screen;
 import net.minecraft.network.chat.Component;
 import net.minecraft.network.chat.MutableComponent;
+import net.minecraft.network.chat.TextComponent;
+import net.minecraft.network.chat.TranslatableComponent;
 import org.jetbrains.annotations.NotNull;
 import org.lwjgl.glfw.GLFW;
 
@@ -127,7 +129,7 @@
         if (!this.secure) return super.createNarrationMessage();
 
         // Secure, do not tell.
-        return Component.translatable("gui.narrate.editBox", this.getMessage(), Component.empty());
+        return new TranslatableComponent("gui.narrate.editBox", this.getMessage(), TextComponent.EMPTY);
     }
 
     @Override
